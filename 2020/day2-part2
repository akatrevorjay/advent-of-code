#!/usr/bin/env python

import collections
import functools
import logging
import re
from pprint import pprint as pp

import pytutils.log

pytutils.log.configure()

log = logging.getLogger(__name__)

fn = './day2.input'

log.info('reading fn=%s', fn)
with open(fn) as fh:
    raw_lines = fh.readlines()

num_pws = 0
num_valid_pws = 0

for line in raw_lines:
    log.debug('line=%r', line)
    line = line.strip().rstrip('\n').rstrip()
    if not line:
        continue

    m: re.Match = re.match(r'^(?P<pos1>\d+)-(?P<pos2>\d+) (?P<char>\w): (?P<pass>\w+)$', line)
    if not m:
        raise ValueError('could not parse line=%r' % line)

    log.debug('parsed: %r', m.groups())
    pos1, pos2, char, pw = m.groups()
    pos1, pos2 = [int(x) - 1 for x in [pos1, pos2]]

    num_pws += 1

    test_chars = ''.join([pw[x] for x in [pos1, pos2]])
    if test_chars.count(char) == 1:
        # log.debug('valid')
        num_valid_pws += 1

log.info('num_pws=%d num_valid_pws=%d', num_pws, num_valid_pws)
